name: Code Quality & Tests

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  unit-tests-linting:
    name: Unit Tests & Linting (${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.12", "3.13"]
        include:
          - os: ubuntu-latest
            python-version: "3.14"
          - os: windows-latest
            python-version: "3.14"
          - os: macos-latest
            python-version: "3.14"

    steps:
      - uses: actions/checkout@v5
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        run: pip install uv
      - name: Install the project
        run: uv sync
      - name: Check pre-commit hooks are up-to-date
        run: |
          uv run pre-commit autoupdate
          git diff --exit-code .pre-commit-config.yaml
      - name: Run pre-commit hooks
        run: uv run pre-commit run --all-files
      - name: Run tests
        run: uv run pytest -v -m unit --junitxml=junit.xml
      - name: Upload Codecov Results
        if: success() && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.14'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }} && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.14'
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  full-integration-tests:
    name: Full Integration Tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: unit-tests-linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.14"
      - name: Install uv
        run: pip install uv
      - name: Install the project
        run: uv sync
      - name: Authenticate (J-Quants)
        env:
          JQUANTS_MAILADDRESS: ${{ secrets.JQUANTS_MAILADDRESS }}
          JQUANTS_PASSWORD: ${{ secrets.JQUANTS_PASSWORD }}
        run: uv run kabu auth jquants
      - name: Cache and get data
        id: cache-data
        uses: actions/cache@v4
        with:
          path: ~/.cache/kabukit
          key: data-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
      - name: Get statements if cache not found
        if: steps.cache-data.outputs.cache-hit != 'true'
        run: uv run kabu get statements
      - name: Run all tests
        env:
          JQUANTS_MAILADDRESS: ${{ secrets.JQUANTS_MAILADDRESS }}
          JQUANTS_PASSWORD: ${{ secrets.JQUANTS_PASSWORD }}
          EDINET_API_KEY: ${{ secrets.EDINET_API_KEY }}
        run: uv run pytest -v --junitxml=junit.xml
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
